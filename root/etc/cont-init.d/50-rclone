#!/usr/bin/with-contenv bash
. /usr/local/bin/variables

sleep 10

if [[ -z $RCLONE_REMOTE_PATH ]]; then
    echo "*** RCLONE_REMOTE_PATH not set. Exiting..."
    exit 1
fi

if [[ ! "${RCLONE_REMOTE_PATH}" == :* ]]; then
    # if not using connection strings for remote path
    until [ -f "${RCLONE_CONFIG}" ]; do
        echo "Waiting for '"${RCLONE_CONFIG}"'. Retrying in 30s ..."
        echo "RUN: docker exec -it <DOCKER_CONTAINER> rclone_setup"
        sleep 30
    done
fi

echo "*** checking rclone remote path: ${RCLONE_REMOTE_PATH}"
if [[ ! "${RCLONE_REMOTE_PATH}" == *:* ]]; then
    echo "ERROR: Missing colon (:) in RCLONE_REMOTE_PATH (${RCLONE_REMOTE_PATH})"
    exit 1
fi
if [[ ! "${RCLONE_REMOTE_PATH}" == :* ]]; then
    rclone_remote="$(echo $RCLONE_REMOTE_PATH | cut -d: -f1):"
    if ! rclone listremotes | grep -q "${rclone_remote}"; then
        echo "ERROR: Invalid rclone remote name (${rclone_remote})"
        echo "ERROR: Available rclone remotes ($(echo $(rclone listremotes) | tr -d '\r'))"
        exit 1
    fi
fi

echo "*** checking rclone mountpoint: ${rclone_mountpoint}"
while findmnt "${rclone_mountpoint}" | grep -q fuse.rclone; do
    echo "ERROR: rclone mountpoint (${rclone_mountpoint}) already mounted"
    fusermount -uz "${rclone_mountpoint}"
    echo "Retrying in 30s ..."
    sleep 30s
done

# permissions
chown -R abc:abc /config /log
chown abc:abc /cache
if [[ -d ${local_mountpoint} ]]; then
    echo "*** changing owner recursively for ${local_mountpoint}"
    chown abc:abc "${local_mountpoint}"
fi

# fuse_mountpoint and rclone_mountpoint permission changes removed but left as comments in case they are needed for helper scripts to run properly.
# [ -d ${fuse_mountpoint} ] && chown -R abc:abc ${fuse_mountpoint}
# [ -d ${rclone_mountpoint} ] && chown -R abc:abc ${rclone_mountpoint}

exit 0
